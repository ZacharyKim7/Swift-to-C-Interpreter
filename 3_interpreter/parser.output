Terminals which are not used

   TOKEN_ERROR
   TOKEN_EOF
   TOKEN_KEYWORD_BREAK
   TOKEN_KEYWORD_FALSE
   TOKEN_KEYWORD_FUNC
   TOKEN_KEYWORD_NOT
   TOKEN_KEYWORD_RETURN
   TOKEN_KEYWORD_TRUE
   TOKEN_COLON
   TOKEN_PERCENT


Grammar

    0 $accept: file $end

    1 file: statement_list

    2 statement_list: statement
    3               | statement TOKEN_NEWLINE statement_list

    4 statement: compound_stmt
    5          | simple_stmts

    6 compound_stmt: if_stmt
    7              | while_stmt
    8              | for_stmt

    9 if_stmt: TOKEN_KEYWORD_IF expression TOKEN_LEFT_BRACE block TOKEN_RIGHT_BRACE elif_stmt
   10        | TOKEN_KEYWORD_IF expression TOKEN_LEFT_BRACE block TOKEN_RIGHT_BRACE else_block
   11        | TOKEN_KEYWORD_IF expression TOKEN_LEFT_BRACE block TOKEN_RIGHT_BRACE

   12 elif_stmt: TOKEN_KEYWORD_ELSE TOKEN_KEYWORD_IF expression TOKEN_LEFT_BRACE block TOKEN_RIGHT_BRACE elif_stmt
   13          | TOKEN_KEYWORD_ELSE TOKEN_KEYWORD_IF expression TOKEN_LEFT_BRACE block TOKEN_RIGHT_BRACE else_block
   14          | TOKEN_KEYWORD_ELSE TOKEN_KEYWORD_IF expression TOKEN_LEFT_BRACE block TOKEN_RIGHT_BRACE

   15 else_block: TOKEN_KEYWORD_ELSE TOKEN_LEFT_BRACE block TOKEN_RIGHT_BRACE

   16 for_stmt: TOKEN_KEYWORD_FOR assignment_stmt TOKEN_RANGE expression TOKEN_LEFT_BRACE block TOKEN_RIGHT_BRACE

   17 while_stmt: TOKEN_KEYWORD_WHILE expression TOKEN_LEFT_BRACE block TOKEN_RIGHT_BRACE

   18 block: TOKEN_NEWLINE statement_list

   19 name: TOKEN_IDENTIFIER

   20 declaration: TOKEN_KEYWORD_LET name TOKEN_ASSIGNMENT expression
   21            | TOKEN_KEYWORD_VAR name TOKEN_ASSIGNMENT expression
   22            | name TOKEN_ASSIGNMENT expression
   23            | array_element TOKEN_ASSIGNMENT expression
   24            | name TOKEN_KEYWORD_IN expression

   25 array_element: name TOKEN_LEFT_BRACKET expression TOKEN_RIGHT_BRACKET

   26 simple_stmts: simple_stmt

   27 simple_stmt: assignment_stmt
   28            | import_stmt
   29            | print_stmt
   30            | /* empty */

   31 assignment_stmt: declaration

   32 print_stmt: TOKEN_KEYWORD_PRINT TOKEN_LEFT_PARENTHESIS expression TOKEN_RIGHT_PARENTHESIS

   33 import_stmt: TOKEN_KEYWORD_IMPORT name

   34 expression: conjunction

   35 conjunction: conjunction TOKEN_AND disjunction
   36            | disjunction

   37 disjunction: disjunction TOKEN_OR inversion
   38            | inversion

   39 inversion: TOKEN_NOT comparison
   40          | comparison

   41 comparison: sum TOKEN_GREATER_THAN sum
   42           | sum TOKEN_LESS_THAN sum
   43           | sum TOKEN_EQUALITY sum
   44           | sum TOKEN_GREATER_THAN_EQUAL sum
   45           | sum TOKEN_LESS_THAN_EQUAL sum
   46           | sum TOKEN_NOT_EQUAL sum
   47           | sum

   48 sum: sum TOKEN_PLUS term
   49    | sum TOKEN_MINUS term
   50    | term

   51 term: term TOKEN_MULTIPLY factor
   52     | term TOKEN_DIVIDE factor
   53     | factor

   54 factor: TOKEN_MINUS factor
   55       | power

   56 power: primary TOKEN_POWER factor
   57      | primary

   58 primary: primary TOKEN_DOT TOKEN_KEYWORD_COUNT
   59        | primary TOKEN_DOT TOKEN_SQUAREROOT TOKEN_LEFT_PARENTHESIS TOKEN_RIGHT_PARENTHESIS
   60        | atom

   61 atom: name
   62     | TOKEN_STRING
   63     | TOKEN_INTEGER
   64     | TOKEN_DOUBLE
   65     | TOKEN_LEFT_PARENTHESIS expression TOKEN_RIGHT_PARENTHESIS
   66     | array_element
   67     | TOKEN_LEFT_BRACKET star_expr TOKEN_RIGHT_BRACKET

   68 star_expr: expression
   69          | expression TOKEN_COMMA star_expr


Terminals, with rules where they appear

$end (0) 0
error (256)
TOKEN_ERROR (258)
TOKEN_EOF (259)
TOKEN_KEYWORD_BREAK (260)
TOKEN_KEYWORD_COUNT (261) 58
TOKEN_KEYWORD_FALSE (262)
TOKEN_KEYWORD_FOR (263) 16
TOKEN_KEYWORD_FUNC (264)
TOKEN_KEYWORD_IN (265) 24
TOKEN_KEYWORD_IF (266) 9 10 11 12 13 14
TOKEN_KEYWORD_ELSE (267) 12 13 14 15
TOKEN_KEYWORD_IMPORT (268) 33
TOKEN_KEYWORD_LET (269) 20
TOKEN_KEYWORD_NOT (270)
TOKEN_KEYWORD_PRINT (271) 32
TOKEN_KEYWORD_RETURN (272)
TOKEN_KEYWORD_TRUE (273)
TOKEN_KEYWORD_VAR (274) 21
TOKEN_KEYWORD_WHILE (275) 17
TOKEN_SQUAREROOT (276) 59
TOKEN_IDENTIFIER (277) 19
TOKEN_INTEGER (278) 63
TOKEN_LEFT_PARENTHESIS (279) 32 59 65
TOKEN_RIGHT_PARENTHESIS (280) 32 59 65
TOKEN_LEFT_BRACKET (281) 25 67
TOKEN_RIGHT_BRACKET (282) 25 67
TOKEN_LEFT_BRACE (283) 9 10 11 12 13 14 15 16 17
TOKEN_RIGHT_BRACE (284) 9 10 11 12 13 14 15 16 17
TOKEN_STRING (285) 62
TOKEN_NEWLINE (286) 3 18
TOKEN_ASSIGNMENT (287) 20 21 22 23
TOKEN_EQUALITY (288) 43
TOKEN_POWER (289) 56
TOKEN_MULTIPLY (290) 51
TOKEN_MINUS (291) 49 54
TOKEN_PLUS (292) 48
TOKEN_DIVIDE (293) 52
TOKEN_COMMA (294) 69
TOKEN_DOT (295) 58 59
TOKEN_RANGE (296) 16
TOKEN_COLON (297)
TOKEN_PERCENT (298)
TOKEN_GREATER_THAN (299) 41
TOKEN_GREATER_THAN_EQUAL (300) 44
TOKEN_LESS_THAN (301) 42
TOKEN_LESS_THAN_EQUAL (302) 45
TOKEN_NOT_EQUAL (303) 46
TOKEN_AND (304) 35
TOKEN_OR (305) 37
TOKEN_NOT (306) 39
TOKEN_DOUBLE (307) 64


Nonterminals, with rules where they appear

$accept (53)
    on left: 0
file (54)
    on left: 1, on right: 0
statement_list (55)
    on left: 2 3, on right: 1 3 18
statement (56)
    on left: 4 5, on right: 2 3
compound_stmt (57)
    on left: 6 7 8, on right: 4
if_stmt (58)
    on left: 9 10 11, on right: 6
elif_stmt (59)
    on left: 12 13 14, on right: 9 12
else_block (60)
    on left: 15, on right: 10 13
for_stmt (61)
    on left: 16, on right: 8
while_stmt (62)
    on left: 17, on right: 7
block (63)
    on left: 18, on right: 9 10 11 12 13 14 15 16 17
name (64)
    on left: 19, on right: 20 21 22 24 25 33 61
declaration (65)
    on left: 20 21 22 23 24, on right: 31
array_element (66)
    on left: 25, on right: 23 66
simple_stmts (67)
    on left: 26, on right: 5
simple_stmt (68)
    on left: 27 28 29 30, on right: 26
assignment_stmt (69)
    on left: 31, on right: 16 27
print_stmt (70)
    on left: 32, on right: 29
import_stmt (71)
    on left: 33, on right: 28
expression (72)
    on left: 34, on right: 9 10 11 12 13 14 16 17 20 21 22 23 24 25
    32 65 68 69
conjunction (73)
    on left: 35 36, on right: 34 35
disjunction (74)
    on left: 37 38, on right: 35 36 37
inversion (75)
    on left: 39 40, on right: 37 38
comparison (76)
    on left: 41 42 43 44 45 46 47, on right: 39 40
sum (77)
    on left: 48 49 50, on right: 41 42 43 44 45 46 47 48 49
term (78)
    on left: 51 52 53, on right: 48 49 50 51 52
factor (79)
    on left: 54 55, on right: 51 52 53 54 56
power (80)
    on left: 56 57, on right: 55
primary (81)
    on left: 58 59 60, on right: 56 57 58 59
atom (82)
    on left: 61 62 63 64 65 66 67, on right: 60
star_expr (83)
    on left: 68 69, on right: 67 69


state 0

    0 $accept: . file $end

    TOKEN_KEYWORD_FOR     shift, and go to state 1
    TOKEN_KEYWORD_IF      shift, and go to state 2
    TOKEN_KEYWORD_IMPORT  shift, and go to state 3
    TOKEN_KEYWORD_LET     shift, and go to state 4
    TOKEN_KEYWORD_PRINT   shift, and go to state 5
    TOKEN_KEYWORD_VAR     shift, and go to state 6
    TOKEN_KEYWORD_WHILE   shift, and go to state 7
    TOKEN_IDENTIFIER      shift, and go to state 8

    $default  reduce using rule 30 (simple_stmt)

    file             go to state 9
    statement_list   go to state 10
    statement        go to state 11
    compound_stmt    go to state 12
    if_stmt          go to state 13
    for_stmt         go to state 14
    while_stmt       go to state 15
    name             go to state 16
    declaration      go to state 17
    array_element    go to state 18
    simple_stmts     go to state 19
    simple_stmt      go to state 20
    assignment_stmt  go to state 21
    print_stmt       go to state 22
    import_stmt      go to state 23


state 1

   16 for_stmt: TOKEN_KEYWORD_FOR . assignment_stmt TOKEN_RANGE expression TOKEN_LEFT_BRACE block TOKEN_RIGHT_BRACE

    TOKEN_KEYWORD_LET  shift, and go to state 4
    TOKEN_KEYWORD_VAR  shift, and go to state 6
    TOKEN_IDENTIFIER   shift, and go to state 8

    name             go to state 16
    declaration      go to state 17
    array_element    go to state 18
    assignment_stmt  go to state 24


state 2

    9 if_stmt: TOKEN_KEYWORD_IF . expression TOKEN_LEFT_BRACE block TOKEN_RIGHT_BRACE elif_stmt
   10        | TOKEN_KEYWORD_IF . expression TOKEN_LEFT_BRACE block TOKEN_RIGHT_BRACE else_block
   11        | TOKEN_KEYWORD_IF . expression TOKEN_LEFT_BRACE block TOKEN_RIGHT_BRACE

    TOKEN_IDENTIFIER        shift, and go to state 8
    TOKEN_INTEGER           shift, and go to state 25
    TOKEN_LEFT_PARENTHESIS  shift, and go to state 26
    TOKEN_LEFT_BRACKET      shift, and go to state 27
    TOKEN_STRING            shift, and go to state 28
    TOKEN_MINUS             shift, and go to state 29
    TOKEN_NOT               shift, and go to state 30
    TOKEN_DOUBLE            shift, and go to state 31

    name           go to state 32
    array_element  go to state 33
    expression     go to state 34
    conjunction    go to state 35
    disjunction    go to state 36
    inversion      go to state 37
    comparison     go to state 38
    sum            go to state 39
    term           go to state 40
    factor         go to state 41
    power          go to state 42
    primary        go to state 43
    atom           go to state 44


state 3

   33 import_stmt: TOKEN_KEYWORD_IMPORT . name

    TOKEN_IDENTIFIER  shift, and go to state 8

    name  go to state 45


state 4

   20 declaration: TOKEN_KEYWORD_LET . name TOKEN_ASSIGNMENT expression

    TOKEN_IDENTIFIER  shift, and go to state 8

    name  go to state 46


state 5

   32 print_stmt: TOKEN_KEYWORD_PRINT . TOKEN_LEFT_PARENTHESIS expression TOKEN_RIGHT_PARENTHESIS

    TOKEN_LEFT_PARENTHESIS  shift, and go to state 47


state 6

   21 declaration: TOKEN_KEYWORD_VAR . name TOKEN_ASSIGNMENT expression

    TOKEN_IDENTIFIER  shift, and go to state 8

    name  go to state 48


state 7

   17 while_stmt: TOKEN_KEYWORD_WHILE . expression TOKEN_LEFT_BRACE block TOKEN_RIGHT_BRACE

    TOKEN_IDENTIFIER        shift, and go to state 8
    TOKEN_INTEGER           shift, and go to state 25
    TOKEN_LEFT_PARENTHESIS  shift, and go to state 26
    TOKEN_LEFT_BRACKET      shift, and go to state 27
    TOKEN_STRING            shift, and go to state 28
    TOKEN_MINUS             shift, and go to state 29
    TOKEN_NOT               shift, and go to state 30
    TOKEN_DOUBLE            shift, and go to state 31

    name           go to state 32
    array_element  go to state 33
    expression     go to state 49
    conjunction    go to state 35
    disjunction    go to state 36
    inversion      go to state 37
    comparison     go to state 38
    sum            go to state 39
    term           go to state 40
    factor         go to state 41
    power          go to state 42
    primary        go to state 43
    atom           go to state 44


state 8

   19 name: TOKEN_IDENTIFIER .

    $default  reduce using rule 19 (name)


state 9

    0 $accept: file . $end

    $end  shift, and go to state 50


state 10

    1 file: statement_list .

    $default  reduce using rule 1 (file)


state 11

    2 statement_list: statement .
    3               | statement . TOKEN_NEWLINE statement_list

    TOKEN_NEWLINE  shift, and go to state 51

    $default  reduce using rule 2 (statement_list)


state 12

    4 statement: compound_stmt .

    $default  reduce using rule 4 (statement)


state 13

    6 compound_stmt: if_stmt .

    $default  reduce using rule 6 (compound_stmt)


state 14

    8 compound_stmt: for_stmt .

    $default  reduce using rule 8 (compound_stmt)


state 15

    7 compound_stmt: while_stmt .

    $default  reduce using rule 7 (compound_stmt)


state 16

   22 declaration: name . TOKEN_ASSIGNMENT expression
   24            | name . TOKEN_KEYWORD_IN expression
   25 array_element: name . TOKEN_LEFT_BRACKET expression TOKEN_RIGHT_BRACKET

    TOKEN_KEYWORD_IN    shift, and go to state 52
    TOKEN_LEFT_BRACKET  shift, and go to state 53
    TOKEN_ASSIGNMENT    shift, and go to state 54


state 17

   31 assignment_stmt: declaration .

    $default  reduce using rule 31 (assignment_stmt)


state 18

   23 declaration: array_element . TOKEN_ASSIGNMENT expression

    TOKEN_ASSIGNMENT  shift, and go to state 55


state 19

    5 statement: simple_stmts .

    $default  reduce using rule 5 (statement)


state 20

   26 simple_stmts: simple_stmt .

    $default  reduce using rule 26 (simple_stmts)


state 21

   27 simple_stmt: assignment_stmt .

    $default  reduce using rule 27 (simple_stmt)


state 22

   29 simple_stmt: print_stmt .

    $default  reduce using rule 29 (simple_stmt)


state 23

   28 simple_stmt: import_stmt .

    $default  reduce using rule 28 (simple_stmt)


state 24

   16 for_stmt: TOKEN_KEYWORD_FOR assignment_stmt . TOKEN_RANGE expression TOKEN_LEFT_BRACE block TOKEN_RIGHT_BRACE

    TOKEN_RANGE  shift, and go to state 56


state 25

   63 atom: TOKEN_INTEGER .

    $default  reduce using rule 63 (atom)


state 26

   65 atom: TOKEN_LEFT_PARENTHESIS . expression TOKEN_RIGHT_PARENTHESIS

    TOKEN_IDENTIFIER        shift, and go to state 8
    TOKEN_INTEGER           shift, and go to state 25
    TOKEN_LEFT_PARENTHESIS  shift, and go to state 26
    TOKEN_LEFT_BRACKET      shift, and go to state 27
    TOKEN_STRING            shift, and go to state 28
    TOKEN_MINUS             shift, and go to state 29
    TOKEN_NOT               shift, and go to state 30
    TOKEN_DOUBLE            shift, and go to state 31

    name           go to state 32
    array_element  go to state 33
    expression     go to state 57
    conjunction    go to state 35
    disjunction    go to state 36
    inversion      go to state 37
    comparison     go to state 38
    sum            go to state 39
    term           go to state 40
    factor         go to state 41
    power          go to state 42
    primary        go to state 43
    atom           go to state 44


state 27

   67 atom: TOKEN_LEFT_BRACKET . star_expr TOKEN_RIGHT_BRACKET

    TOKEN_IDENTIFIER        shift, and go to state 8
    TOKEN_INTEGER           shift, and go to state 25
    TOKEN_LEFT_PARENTHESIS  shift, and go to state 26
    TOKEN_LEFT_BRACKET      shift, and go to state 27
    TOKEN_STRING            shift, and go to state 28
    TOKEN_MINUS             shift, and go to state 29
    TOKEN_NOT               shift, and go to state 30
    TOKEN_DOUBLE            shift, and go to state 31

    name           go to state 32
    array_element  go to state 33
    expression     go to state 58
    conjunction    go to state 35
    disjunction    go to state 36
    inversion      go to state 37
    comparison     go to state 38
    sum            go to state 39
    term           go to state 40
    factor         go to state 41
    power          go to state 42
    primary        go to state 43
    atom           go to state 44
    star_expr      go to state 59


state 28

   62 atom: TOKEN_STRING .

    $default  reduce using rule 62 (atom)


state 29

   54 factor: TOKEN_MINUS . factor

    TOKEN_IDENTIFIER        shift, and go to state 8
    TOKEN_INTEGER           shift, and go to state 25
    TOKEN_LEFT_PARENTHESIS  shift, and go to state 26
    TOKEN_LEFT_BRACKET      shift, and go to state 27
    TOKEN_STRING            shift, and go to state 28
    TOKEN_MINUS             shift, and go to state 29
    TOKEN_DOUBLE            shift, and go to state 31

    name           go to state 32
    array_element  go to state 33
    factor         go to state 60
    power          go to state 42
    primary        go to state 43
    atom           go to state 44


state 30

   39 inversion: TOKEN_NOT . comparison

    TOKEN_IDENTIFIER        shift, and go to state 8
    TOKEN_INTEGER           shift, and go to state 25
    TOKEN_LEFT_PARENTHESIS  shift, and go to state 26
    TOKEN_LEFT_BRACKET      shift, and go to state 27
    TOKEN_STRING            shift, and go to state 28
    TOKEN_MINUS             shift, and go to state 29
    TOKEN_DOUBLE            shift, and go to state 31

    name           go to state 32
    array_element  go to state 33
    comparison     go to state 61
    sum            go to state 39
    term           go to state 40
    factor         go to state 41
    power          go to state 42
    primary        go to state 43
    atom           go to state 44


state 31

   64 atom: TOKEN_DOUBLE .

    $default  reduce using rule 64 (atom)


state 32

   25 array_element: name . TOKEN_LEFT_BRACKET expression TOKEN_RIGHT_BRACKET
   61 atom: name .

    TOKEN_LEFT_BRACKET  shift, and go to state 53

    $default  reduce using rule 61 (atom)


state 33

   66 atom: array_element .

    $default  reduce using rule 66 (atom)


state 34

    9 if_stmt: TOKEN_KEYWORD_IF expression . TOKEN_LEFT_BRACE block TOKEN_RIGHT_BRACE elif_stmt
   10        | TOKEN_KEYWORD_IF expression . TOKEN_LEFT_BRACE block TOKEN_RIGHT_BRACE else_block
   11        | TOKEN_KEYWORD_IF expression . TOKEN_LEFT_BRACE block TOKEN_RIGHT_BRACE

    TOKEN_LEFT_BRACE  shift, and go to state 62


state 35

   34 expression: conjunction .
   35 conjunction: conjunction . TOKEN_AND disjunction

    TOKEN_AND  shift, and go to state 63

    $default  reduce using rule 34 (expression)


state 36

   36 conjunction: disjunction .
   37 disjunction: disjunction . TOKEN_OR inversion

    TOKEN_OR  shift, and go to state 64

    $default  reduce using rule 36 (conjunction)


state 37

   38 disjunction: inversion .

    $default  reduce using rule 38 (disjunction)


state 38

   40 inversion: comparison .

    $default  reduce using rule 40 (inversion)


state 39

   41 comparison: sum . TOKEN_GREATER_THAN sum
   42           | sum . TOKEN_LESS_THAN sum
   43           | sum . TOKEN_EQUALITY sum
   44           | sum . TOKEN_GREATER_THAN_EQUAL sum
   45           | sum . TOKEN_LESS_THAN_EQUAL sum
   46           | sum . TOKEN_NOT_EQUAL sum
   47           | sum .
   48 sum: sum . TOKEN_PLUS term
   49    | sum . TOKEN_MINUS term

    TOKEN_EQUALITY            shift, and go to state 65
    TOKEN_MINUS               shift, and go to state 66
    TOKEN_PLUS                shift, and go to state 67
    TOKEN_GREATER_THAN        shift, and go to state 68
    TOKEN_GREATER_THAN_EQUAL  shift, and go to state 69
    TOKEN_LESS_THAN           shift, and go to state 70
    TOKEN_LESS_THAN_EQUAL     shift, and go to state 71
    TOKEN_NOT_EQUAL           shift, and go to state 72

    $default  reduce using rule 47 (comparison)


state 40

   50 sum: term .
   51 term: term . TOKEN_MULTIPLY factor
   52     | term . TOKEN_DIVIDE factor

    TOKEN_MULTIPLY  shift, and go to state 73
    TOKEN_DIVIDE    shift, and go to state 74

    $default  reduce using rule 50 (sum)


state 41

   53 term: factor .

    $default  reduce using rule 53 (term)


state 42

   55 factor: power .

    $default  reduce using rule 55 (factor)


state 43

   56 power: primary . TOKEN_POWER factor
   57      | primary .
   58 primary: primary . TOKEN_DOT TOKEN_KEYWORD_COUNT
   59        | primary . TOKEN_DOT TOKEN_SQUAREROOT TOKEN_LEFT_PARENTHESIS TOKEN_RIGHT_PARENTHESIS

    TOKEN_POWER  shift, and go to state 75
    TOKEN_DOT    shift, and go to state 76

    $default  reduce using rule 57 (power)


state 44

   60 primary: atom .

    $default  reduce using rule 60 (primary)


state 45

   33 import_stmt: TOKEN_KEYWORD_IMPORT name .

    $default  reduce using rule 33 (import_stmt)


state 46

   20 declaration: TOKEN_KEYWORD_LET name . TOKEN_ASSIGNMENT expression

    TOKEN_ASSIGNMENT  shift, and go to state 77


state 47

   32 print_stmt: TOKEN_KEYWORD_PRINT TOKEN_LEFT_PARENTHESIS . expression TOKEN_RIGHT_PARENTHESIS

    TOKEN_IDENTIFIER        shift, and go to state 8
    TOKEN_INTEGER           shift, and go to state 25
    TOKEN_LEFT_PARENTHESIS  shift, and go to state 26
    TOKEN_LEFT_BRACKET      shift, and go to state 27
    TOKEN_STRING            shift, and go to state 28
    TOKEN_MINUS             shift, and go to state 29
    TOKEN_NOT               shift, and go to state 30
    TOKEN_DOUBLE            shift, and go to state 31

    name           go to state 32
    array_element  go to state 33
    expression     go to state 78
    conjunction    go to state 35
    disjunction    go to state 36
    inversion      go to state 37
    comparison     go to state 38
    sum            go to state 39
    term           go to state 40
    factor         go to state 41
    power          go to state 42
    primary        go to state 43
    atom           go to state 44


state 48

   21 declaration: TOKEN_KEYWORD_VAR name . TOKEN_ASSIGNMENT expression

    TOKEN_ASSIGNMENT  shift, and go to state 79


state 49

   17 while_stmt: TOKEN_KEYWORD_WHILE expression . TOKEN_LEFT_BRACE block TOKEN_RIGHT_BRACE

    TOKEN_LEFT_BRACE  shift, and go to state 80


state 50

    0 $accept: file $end .

    $default  accept


state 51

    3 statement_list: statement TOKEN_NEWLINE . statement_list

    TOKEN_KEYWORD_FOR     shift, and go to state 1
    TOKEN_KEYWORD_IF      shift, and go to state 2
    TOKEN_KEYWORD_IMPORT  shift, and go to state 3
    TOKEN_KEYWORD_LET     shift, and go to state 4
    TOKEN_KEYWORD_PRINT   shift, and go to state 5
    TOKEN_KEYWORD_VAR     shift, and go to state 6
    TOKEN_KEYWORD_WHILE   shift, and go to state 7
    TOKEN_IDENTIFIER      shift, and go to state 8

    $default  reduce using rule 30 (simple_stmt)

    statement_list   go to state 81
    statement        go to state 11
    compound_stmt    go to state 12
    if_stmt          go to state 13
    for_stmt         go to state 14
    while_stmt       go to state 15
    name             go to state 16
    declaration      go to state 17
    array_element    go to state 18
    simple_stmts     go to state 19
    simple_stmt      go to state 20
    assignment_stmt  go to state 21
    print_stmt       go to state 22
    import_stmt      go to state 23


state 52

   24 declaration: name TOKEN_KEYWORD_IN . expression

    TOKEN_IDENTIFIER        shift, and go to state 8
    TOKEN_INTEGER           shift, and go to state 25
    TOKEN_LEFT_PARENTHESIS  shift, and go to state 26
    TOKEN_LEFT_BRACKET      shift, and go to state 27
    TOKEN_STRING            shift, and go to state 28
    TOKEN_MINUS             shift, and go to state 29
    TOKEN_NOT               shift, and go to state 30
    TOKEN_DOUBLE            shift, and go to state 31

    name           go to state 32
    array_element  go to state 33
    expression     go to state 82
    conjunction    go to state 35
    disjunction    go to state 36
    inversion      go to state 37
    comparison     go to state 38
    sum            go to state 39
    term           go to state 40
    factor         go to state 41
    power          go to state 42
    primary        go to state 43
    atom           go to state 44


state 53

   25 array_element: name TOKEN_LEFT_BRACKET . expression TOKEN_RIGHT_BRACKET

    TOKEN_IDENTIFIER        shift, and go to state 8
    TOKEN_INTEGER           shift, and go to state 25
    TOKEN_LEFT_PARENTHESIS  shift, and go to state 26
    TOKEN_LEFT_BRACKET      shift, and go to state 27
    TOKEN_STRING            shift, and go to state 28
    TOKEN_MINUS             shift, and go to state 29
    TOKEN_NOT               shift, and go to state 30
    TOKEN_DOUBLE            shift, and go to state 31

    name           go to state 32
    array_element  go to state 33
    expression     go to state 83
    conjunction    go to state 35
    disjunction    go to state 36
    inversion      go to state 37
    comparison     go to state 38
    sum            go to state 39
    term           go to state 40
    factor         go to state 41
    power          go to state 42
    primary        go to state 43
    atom           go to state 44


state 54

   22 declaration: name TOKEN_ASSIGNMENT . expression

    TOKEN_IDENTIFIER        shift, and go to state 8
    TOKEN_INTEGER           shift, and go to state 25
    TOKEN_LEFT_PARENTHESIS  shift, and go to state 26
    TOKEN_LEFT_BRACKET      shift, and go to state 27
    TOKEN_STRING            shift, and go to state 28
    TOKEN_MINUS             shift, and go to state 29
    TOKEN_NOT               shift, and go to state 30
    TOKEN_DOUBLE            shift, and go to state 31

    name           go to state 32
    array_element  go to state 33
    expression     go to state 84
    conjunction    go to state 35
    disjunction    go to state 36
    inversion      go to state 37
    comparison     go to state 38
    sum            go to state 39
    term           go to state 40
    factor         go to state 41
    power          go to state 42
    primary        go to state 43
    atom           go to state 44


state 55

   23 declaration: array_element TOKEN_ASSIGNMENT . expression

    TOKEN_IDENTIFIER        shift, and go to state 8
    TOKEN_INTEGER           shift, and go to state 25
    TOKEN_LEFT_PARENTHESIS  shift, and go to state 26
    TOKEN_LEFT_BRACKET      shift, and go to state 27
    TOKEN_STRING            shift, and go to state 28
    TOKEN_MINUS             shift, and go to state 29
    TOKEN_NOT               shift, and go to state 30
    TOKEN_DOUBLE            shift, and go to state 31

    name           go to state 32
    array_element  go to state 33
    expression     go to state 85
    conjunction    go to state 35
    disjunction    go to state 36
    inversion      go to state 37
    comparison     go to state 38
    sum            go to state 39
    term           go to state 40
    factor         go to state 41
    power          go to state 42
    primary        go to state 43
    atom           go to state 44


state 56

   16 for_stmt: TOKEN_KEYWORD_FOR assignment_stmt TOKEN_RANGE . expression TOKEN_LEFT_BRACE block TOKEN_RIGHT_BRACE

    TOKEN_IDENTIFIER        shift, and go to state 8
    TOKEN_INTEGER           shift, and go to state 25
    TOKEN_LEFT_PARENTHESIS  shift, and go to state 26
    TOKEN_LEFT_BRACKET      shift, and go to state 27
    TOKEN_STRING            shift, and go to state 28
    TOKEN_MINUS             shift, and go to state 29
    TOKEN_NOT               shift, and go to state 30
    TOKEN_DOUBLE            shift, and go to state 31

    name           go to state 32
    array_element  go to state 33
    expression     go to state 86
    conjunction    go to state 35
    disjunction    go to state 36
    inversion      go to state 37
    comparison     go to state 38
    sum            go to state 39
    term           go to state 40
    factor         go to state 41
    power          go to state 42
    primary        go to state 43
    atom           go to state 44


state 57

   65 atom: TOKEN_LEFT_PARENTHESIS expression . TOKEN_RIGHT_PARENTHESIS

    TOKEN_RIGHT_PARENTHESIS  shift, and go to state 87


state 58

   68 star_expr: expression .
   69          | expression . TOKEN_COMMA star_expr

    TOKEN_COMMA  shift, and go to state 88

    $default  reduce using rule 68 (star_expr)


state 59

   67 atom: TOKEN_LEFT_BRACKET star_expr . TOKEN_RIGHT_BRACKET

    TOKEN_RIGHT_BRACKET  shift, and go to state 89


state 60

   54 factor: TOKEN_MINUS factor .

    $default  reduce using rule 54 (factor)


state 61

   39 inversion: TOKEN_NOT comparison .

    $default  reduce using rule 39 (inversion)


state 62

    9 if_stmt: TOKEN_KEYWORD_IF expression TOKEN_LEFT_BRACE . block TOKEN_RIGHT_BRACE elif_stmt
   10        | TOKEN_KEYWORD_IF expression TOKEN_LEFT_BRACE . block TOKEN_RIGHT_BRACE else_block
   11        | TOKEN_KEYWORD_IF expression TOKEN_LEFT_BRACE . block TOKEN_RIGHT_BRACE

    TOKEN_NEWLINE  shift, and go to state 90

    block  go to state 91


state 63

   35 conjunction: conjunction TOKEN_AND . disjunction

    TOKEN_IDENTIFIER        shift, and go to state 8
    TOKEN_INTEGER           shift, and go to state 25
    TOKEN_LEFT_PARENTHESIS  shift, and go to state 26
    TOKEN_LEFT_BRACKET      shift, and go to state 27
    TOKEN_STRING            shift, and go to state 28
    TOKEN_MINUS             shift, and go to state 29
    TOKEN_NOT               shift, and go to state 30
    TOKEN_DOUBLE            shift, and go to state 31

    name           go to state 32
    array_element  go to state 33
    disjunction    go to state 92
    inversion      go to state 37
    comparison     go to state 38
    sum            go to state 39
    term           go to state 40
    factor         go to state 41
    power          go to state 42
    primary        go to state 43
    atom           go to state 44


state 64

   37 disjunction: disjunction TOKEN_OR . inversion

    TOKEN_IDENTIFIER        shift, and go to state 8
    TOKEN_INTEGER           shift, and go to state 25
    TOKEN_LEFT_PARENTHESIS  shift, and go to state 26
    TOKEN_LEFT_BRACKET      shift, and go to state 27
    TOKEN_STRING            shift, and go to state 28
    TOKEN_MINUS             shift, and go to state 29
    TOKEN_NOT               shift, and go to state 30
    TOKEN_DOUBLE            shift, and go to state 31

    name           go to state 32
    array_element  go to state 33
    inversion      go to state 93
    comparison     go to state 38
    sum            go to state 39
    term           go to state 40
    factor         go to state 41
    power          go to state 42
    primary        go to state 43
    atom           go to state 44


state 65

   43 comparison: sum TOKEN_EQUALITY . sum

    TOKEN_IDENTIFIER        shift, and go to state 8
    TOKEN_INTEGER           shift, and go to state 25
    TOKEN_LEFT_PARENTHESIS  shift, and go to state 26
    TOKEN_LEFT_BRACKET      shift, and go to state 27
    TOKEN_STRING            shift, and go to state 28
    TOKEN_MINUS             shift, and go to state 29
    TOKEN_DOUBLE            shift, and go to state 31

    name           go to state 32
    array_element  go to state 33
    sum            go to state 94
    term           go to state 40
    factor         go to state 41
    power          go to state 42
    primary        go to state 43
    atom           go to state 44


state 66

   49 sum: sum TOKEN_MINUS . term

    TOKEN_IDENTIFIER        shift, and go to state 8
    TOKEN_INTEGER           shift, and go to state 25
    TOKEN_LEFT_PARENTHESIS  shift, and go to state 26
    TOKEN_LEFT_BRACKET      shift, and go to state 27
    TOKEN_STRING            shift, and go to state 28
    TOKEN_MINUS             shift, and go to state 29
    TOKEN_DOUBLE            shift, and go to state 31

    name           go to state 32
    array_element  go to state 33
    term           go to state 95
    factor         go to state 41
    power          go to state 42
    primary        go to state 43
    atom           go to state 44


state 67

   48 sum: sum TOKEN_PLUS . term

    TOKEN_IDENTIFIER        shift, and go to state 8
    TOKEN_INTEGER           shift, and go to state 25
    TOKEN_LEFT_PARENTHESIS  shift, and go to state 26
    TOKEN_LEFT_BRACKET      shift, and go to state 27
    TOKEN_STRING            shift, and go to state 28
    TOKEN_MINUS             shift, and go to state 29
    TOKEN_DOUBLE            shift, and go to state 31

    name           go to state 32
    array_element  go to state 33
    term           go to state 96
    factor         go to state 41
    power          go to state 42
    primary        go to state 43
    atom           go to state 44


state 68

   41 comparison: sum TOKEN_GREATER_THAN . sum

    TOKEN_IDENTIFIER        shift, and go to state 8
    TOKEN_INTEGER           shift, and go to state 25
    TOKEN_LEFT_PARENTHESIS  shift, and go to state 26
    TOKEN_LEFT_BRACKET      shift, and go to state 27
    TOKEN_STRING            shift, and go to state 28
    TOKEN_MINUS             shift, and go to state 29
    TOKEN_DOUBLE            shift, and go to state 31

    name           go to state 32
    array_element  go to state 33
    sum            go to state 97
    term           go to state 40
    factor         go to state 41
    power          go to state 42
    primary        go to state 43
    atom           go to state 44


state 69

   44 comparison: sum TOKEN_GREATER_THAN_EQUAL . sum

    TOKEN_IDENTIFIER        shift, and go to state 8
    TOKEN_INTEGER           shift, and go to state 25
    TOKEN_LEFT_PARENTHESIS  shift, and go to state 26
    TOKEN_LEFT_BRACKET      shift, and go to state 27
    TOKEN_STRING            shift, and go to state 28
    TOKEN_MINUS             shift, and go to state 29
    TOKEN_DOUBLE            shift, and go to state 31

    name           go to state 32
    array_element  go to state 33
    sum            go to state 98
    term           go to state 40
    factor         go to state 41
    power          go to state 42
    primary        go to state 43
    atom           go to state 44


state 70

   42 comparison: sum TOKEN_LESS_THAN . sum

    TOKEN_IDENTIFIER        shift, and go to state 8
    TOKEN_INTEGER           shift, and go to state 25
    TOKEN_LEFT_PARENTHESIS  shift, and go to state 26
    TOKEN_LEFT_BRACKET      shift, and go to state 27
    TOKEN_STRING            shift, and go to state 28
    TOKEN_MINUS             shift, and go to state 29
    TOKEN_DOUBLE            shift, and go to state 31

    name           go to state 32
    array_element  go to state 33
    sum            go to state 99
    term           go to state 40
    factor         go to state 41
    power          go to state 42
    primary        go to state 43
    atom           go to state 44


state 71

   45 comparison: sum TOKEN_LESS_THAN_EQUAL . sum

    TOKEN_IDENTIFIER        shift, and go to state 8
    TOKEN_INTEGER           shift, and go to state 25
    TOKEN_LEFT_PARENTHESIS  shift, and go to state 26
    TOKEN_LEFT_BRACKET      shift, and go to state 27
    TOKEN_STRING            shift, and go to state 28
    TOKEN_MINUS             shift, and go to state 29
    TOKEN_DOUBLE            shift, and go to state 31

    name           go to state 32
    array_element  go to state 33
    sum            go to state 100
    term           go to state 40
    factor         go to state 41
    power          go to state 42
    primary        go to state 43
    atom           go to state 44


state 72

   46 comparison: sum TOKEN_NOT_EQUAL . sum

    TOKEN_IDENTIFIER        shift, and go to state 8
    TOKEN_INTEGER           shift, and go to state 25
    TOKEN_LEFT_PARENTHESIS  shift, and go to state 26
    TOKEN_LEFT_BRACKET      shift, and go to state 27
    TOKEN_STRING            shift, and go to state 28
    TOKEN_MINUS             shift, and go to state 29
    TOKEN_DOUBLE            shift, and go to state 31

    name           go to state 32
    array_element  go to state 33
    sum            go to state 101
    term           go to state 40
    factor         go to state 41
    power          go to state 42
    primary        go to state 43
    atom           go to state 44


state 73

   51 term: term TOKEN_MULTIPLY . factor

    TOKEN_IDENTIFIER        shift, and go to state 8
    TOKEN_INTEGER           shift, and go to state 25
    TOKEN_LEFT_PARENTHESIS  shift, and go to state 26
    TOKEN_LEFT_BRACKET      shift, and go to state 27
    TOKEN_STRING            shift, and go to state 28
    TOKEN_MINUS             shift, and go to state 29
    TOKEN_DOUBLE            shift, and go to state 31

    name           go to state 32
    array_element  go to state 33
    factor         go to state 102
    power          go to state 42
    primary        go to state 43
    atom           go to state 44


state 74

   52 term: term TOKEN_DIVIDE . factor

    TOKEN_IDENTIFIER        shift, and go to state 8
    TOKEN_INTEGER           shift, and go to state 25
    TOKEN_LEFT_PARENTHESIS  shift, and go to state 26
    TOKEN_LEFT_BRACKET      shift, and go to state 27
    TOKEN_STRING            shift, and go to state 28
    TOKEN_MINUS             shift, and go to state 29
    TOKEN_DOUBLE            shift, and go to state 31

    name           go to state 32
    array_element  go to state 33
    factor         go to state 103
    power          go to state 42
    primary        go to state 43
    atom           go to state 44


state 75

   56 power: primary TOKEN_POWER . factor

    TOKEN_IDENTIFIER        shift, and go to state 8
    TOKEN_INTEGER           shift, and go to state 25
    TOKEN_LEFT_PARENTHESIS  shift, and go to state 26
    TOKEN_LEFT_BRACKET      shift, and go to state 27
    TOKEN_STRING            shift, and go to state 28
    TOKEN_MINUS             shift, and go to state 29
    TOKEN_DOUBLE            shift, and go to state 31

    name           go to state 32
    array_element  go to state 33
    factor         go to state 104
    power          go to state 42
    primary        go to state 43
    atom           go to state 44


state 76

   58 primary: primary TOKEN_DOT . TOKEN_KEYWORD_COUNT
   59        | primary TOKEN_DOT . TOKEN_SQUAREROOT TOKEN_LEFT_PARENTHESIS TOKEN_RIGHT_PARENTHESIS

    TOKEN_KEYWORD_COUNT  shift, and go to state 105
    TOKEN_SQUAREROOT     shift, and go to state 106


state 77

   20 declaration: TOKEN_KEYWORD_LET name TOKEN_ASSIGNMENT . expression

    TOKEN_IDENTIFIER        shift, and go to state 8
    TOKEN_INTEGER           shift, and go to state 25
    TOKEN_LEFT_PARENTHESIS  shift, and go to state 26
    TOKEN_LEFT_BRACKET      shift, and go to state 27
    TOKEN_STRING            shift, and go to state 28
    TOKEN_MINUS             shift, and go to state 29
    TOKEN_NOT               shift, and go to state 30
    TOKEN_DOUBLE            shift, and go to state 31

    name           go to state 32
    array_element  go to state 33
    expression     go to state 107
    conjunction    go to state 35
    disjunction    go to state 36
    inversion      go to state 37
    comparison     go to state 38
    sum            go to state 39
    term           go to state 40
    factor         go to state 41
    power          go to state 42
    primary        go to state 43
    atom           go to state 44


state 78

   32 print_stmt: TOKEN_KEYWORD_PRINT TOKEN_LEFT_PARENTHESIS expression . TOKEN_RIGHT_PARENTHESIS

    TOKEN_RIGHT_PARENTHESIS  shift, and go to state 108


state 79

   21 declaration: TOKEN_KEYWORD_VAR name TOKEN_ASSIGNMENT . expression

    TOKEN_IDENTIFIER        shift, and go to state 8
    TOKEN_INTEGER           shift, and go to state 25
    TOKEN_LEFT_PARENTHESIS  shift, and go to state 26
    TOKEN_LEFT_BRACKET      shift, and go to state 27
    TOKEN_STRING            shift, and go to state 28
    TOKEN_MINUS             shift, and go to state 29
    TOKEN_NOT               shift, and go to state 30
    TOKEN_DOUBLE            shift, and go to state 31

    name           go to state 32
    array_element  go to state 33
    expression     go to state 109
    conjunction    go to state 35
    disjunction    go to state 36
    inversion      go to state 37
    comparison     go to state 38
    sum            go to state 39
    term           go to state 40
    factor         go to state 41
    power          go to state 42
    primary        go to state 43
    atom           go to state 44


state 80

   17 while_stmt: TOKEN_KEYWORD_WHILE expression TOKEN_LEFT_BRACE . block TOKEN_RIGHT_BRACE

    TOKEN_NEWLINE  shift, and go to state 90

    block  go to state 110


state 81

    3 statement_list: statement TOKEN_NEWLINE statement_list .

    $default  reduce using rule 3 (statement_list)


state 82

   24 declaration: name TOKEN_KEYWORD_IN expression .

    $default  reduce using rule 24 (declaration)


state 83

   25 array_element: name TOKEN_LEFT_BRACKET expression . TOKEN_RIGHT_BRACKET

    TOKEN_RIGHT_BRACKET  shift, and go to state 111


state 84

   22 declaration: name TOKEN_ASSIGNMENT expression .

    $default  reduce using rule 22 (declaration)


state 85

   23 declaration: array_element TOKEN_ASSIGNMENT expression .

    $default  reduce using rule 23 (declaration)


state 86

   16 for_stmt: TOKEN_KEYWORD_FOR assignment_stmt TOKEN_RANGE expression . TOKEN_LEFT_BRACE block TOKEN_RIGHT_BRACE

    TOKEN_LEFT_BRACE  shift, and go to state 112


state 87

   65 atom: TOKEN_LEFT_PARENTHESIS expression TOKEN_RIGHT_PARENTHESIS .

    $default  reduce using rule 65 (atom)


state 88

   69 star_expr: expression TOKEN_COMMA . star_expr

    TOKEN_IDENTIFIER        shift, and go to state 8
    TOKEN_INTEGER           shift, and go to state 25
    TOKEN_LEFT_PARENTHESIS  shift, and go to state 26
    TOKEN_LEFT_BRACKET      shift, and go to state 27
    TOKEN_STRING            shift, and go to state 28
    TOKEN_MINUS             shift, and go to state 29
    TOKEN_NOT               shift, and go to state 30
    TOKEN_DOUBLE            shift, and go to state 31

    name           go to state 32
    array_element  go to state 33
    expression     go to state 58
    conjunction    go to state 35
    disjunction    go to state 36
    inversion      go to state 37
    comparison     go to state 38
    sum            go to state 39
    term           go to state 40
    factor         go to state 41
    power          go to state 42
    primary        go to state 43
    atom           go to state 44
    star_expr      go to state 113


state 89

   67 atom: TOKEN_LEFT_BRACKET star_expr TOKEN_RIGHT_BRACKET .

    $default  reduce using rule 67 (atom)


state 90

   18 block: TOKEN_NEWLINE . statement_list

    TOKEN_KEYWORD_FOR     shift, and go to state 1
    TOKEN_KEYWORD_IF      shift, and go to state 2
    TOKEN_KEYWORD_IMPORT  shift, and go to state 3
    TOKEN_KEYWORD_LET     shift, and go to state 4
    TOKEN_KEYWORD_PRINT   shift, and go to state 5
    TOKEN_KEYWORD_VAR     shift, and go to state 6
    TOKEN_KEYWORD_WHILE   shift, and go to state 7
    TOKEN_IDENTIFIER      shift, and go to state 8

    $default  reduce using rule 30 (simple_stmt)

    statement_list   go to state 114
    statement        go to state 11
    compound_stmt    go to state 12
    if_stmt          go to state 13
    for_stmt         go to state 14
    while_stmt       go to state 15
    name             go to state 16
    declaration      go to state 17
    array_element    go to state 18
    simple_stmts     go to state 19
    simple_stmt      go to state 20
    assignment_stmt  go to state 21
    print_stmt       go to state 22
    import_stmt      go to state 23


state 91

    9 if_stmt: TOKEN_KEYWORD_IF expression TOKEN_LEFT_BRACE block . TOKEN_RIGHT_BRACE elif_stmt
   10        | TOKEN_KEYWORD_IF expression TOKEN_LEFT_BRACE block . TOKEN_RIGHT_BRACE else_block
   11        | TOKEN_KEYWORD_IF expression TOKEN_LEFT_BRACE block . TOKEN_RIGHT_BRACE

    TOKEN_RIGHT_BRACE  shift, and go to state 115


state 92

   35 conjunction: conjunction TOKEN_AND disjunction .
   37 disjunction: disjunction . TOKEN_OR inversion

    TOKEN_OR  shift, and go to state 64

    $default  reduce using rule 35 (conjunction)


state 93

   37 disjunction: disjunction TOKEN_OR inversion .

    $default  reduce using rule 37 (disjunction)


state 94

   43 comparison: sum TOKEN_EQUALITY sum .
   48 sum: sum . TOKEN_PLUS term
   49    | sum . TOKEN_MINUS term

    TOKEN_MINUS  shift, and go to state 66
    TOKEN_PLUS   shift, and go to state 67

    $default  reduce using rule 43 (comparison)


state 95

   49 sum: sum TOKEN_MINUS term .
   51 term: term . TOKEN_MULTIPLY factor
   52     | term . TOKEN_DIVIDE factor

    TOKEN_MULTIPLY  shift, and go to state 73
    TOKEN_DIVIDE    shift, and go to state 74

    $default  reduce using rule 49 (sum)


state 96

   48 sum: sum TOKEN_PLUS term .
   51 term: term . TOKEN_MULTIPLY factor
   52     | term . TOKEN_DIVIDE factor

    TOKEN_MULTIPLY  shift, and go to state 73
    TOKEN_DIVIDE    shift, and go to state 74

    $default  reduce using rule 48 (sum)


state 97

   41 comparison: sum TOKEN_GREATER_THAN sum .
   48 sum: sum . TOKEN_PLUS term
   49    | sum . TOKEN_MINUS term

    TOKEN_MINUS  shift, and go to state 66
    TOKEN_PLUS   shift, and go to state 67

    $default  reduce using rule 41 (comparison)


state 98

   44 comparison: sum TOKEN_GREATER_THAN_EQUAL sum .
   48 sum: sum . TOKEN_PLUS term
   49    | sum . TOKEN_MINUS term

    TOKEN_MINUS  shift, and go to state 66
    TOKEN_PLUS   shift, and go to state 67

    $default  reduce using rule 44 (comparison)


state 99

   42 comparison: sum TOKEN_LESS_THAN sum .
   48 sum: sum . TOKEN_PLUS term
   49    | sum . TOKEN_MINUS term

    TOKEN_MINUS  shift, and go to state 66
    TOKEN_PLUS   shift, and go to state 67

    $default  reduce using rule 42 (comparison)


state 100

   45 comparison: sum TOKEN_LESS_THAN_EQUAL sum .
   48 sum: sum . TOKEN_PLUS term
   49    | sum . TOKEN_MINUS term

    TOKEN_MINUS  shift, and go to state 66
    TOKEN_PLUS   shift, and go to state 67

    $default  reduce using rule 45 (comparison)


state 101

   46 comparison: sum TOKEN_NOT_EQUAL sum .
   48 sum: sum . TOKEN_PLUS term
   49    | sum . TOKEN_MINUS term

    TOKEN_MINUS  shift, and go to state 66
    TOKEN_PLUS   shift, and go to state 67

    $default  reduce using rule 46 (comparison)


state 102

   51 term: term TOKEN_MULTIPLY factor .

    $default  reduce using rule 51 (term)


state 103

   52 term: term TOKEN_DIVIDE factor .

    $default  reduce using rule 52 (term)


state 104

   56 power: primary TOKEN_POWER factor .

    $default  reduce using rule 56 (power)


state 105

   58 primary: primary TOKEN_DOT TOKEN_KEYWORD_COUNT .

    $default  reduce using rule 58 (primary)


state 106

   59 primary: primary TOKEN_DOT TOKEN_SQUAREROOT . TOKEN_LEFT_PARENTHESIS TOKEN_RIGHT_PARENTHESIS

    TOKEN_LEFT_PARENTHESIS  shift, and go to state 116


state 107

   20 declaration: TOKEN_KEYWORD_LET name TOKEN_ASSIGNMENT expression .

    $default  reduce using rule 20 (declaration)


state 108

   32 print_stmt: TOKEN_KEYWORD_PRINT TOKEN_LEFT_PARENTHESIS expression TOKEN_RIGHT_PARENTHESIS .

    $default  reduce using rule 32 (print_stmt)


state 109

   21 declaration: TOKEN_KEYWORD_VAR name TOKEN_ASSIGNMENT expression .

    $default  reduce using rule 21 (declaration)


state 110

   17 while_stmt: TOKEN_KEYWORD_WHILE expression TOKEN_LEFT_BRACE block . TOKEN_RIGHT_BRACE

    TOKEN_RIGHT_BRACE  shift, and go to state 117


state 111

   25 array_element: name TOKEN_LEFT_BRACKET expression TOKEN_RIGHT_BRACKET .

    $default  reduce using rule 25 (array_element)


state 112

   16 for_stmt: TOKEN_KEYWORD_FOR assignment_stmt TOKEN_RANGE expression TOKEN_LEFT_BRACE . block TOKEN_RIGHT_BRACE

    TOKEN_NEWLINE  shift, and go to state 90

    block  go to state 118


state 113

   69 star_expr: expression TOKEN_COMMA star_expr .

    $default  reduce using rule 69 (star_expr)


state 114

   18 block: TOKEN_NEWLINE statement_list .

    $default  reduce using rule 18 (block)


state 115

    9 if_stmt: TOKEN_KEYWORD_IF expression TOKEN_LEFT_BRACE block TOKEN_RIGHT_BRACE . elif_stmt
   10        | TOKEN_KEYWORD_IF expression TOKEN_LEFT_BRACE block TOKEN_RIGHT_BRACE . else_block
   11        | TOKEN_KEYWORD_IF expression TOKEN_LEFT_BRACE block TOKEN_RIGHT_BRACE .

    TOKEN_KEYWORD_ELSE  shift, and go to state 119

    $default  reduce using rule 11 (if_stmt)

    elif_stmt   go to state 120
    else_block  go to state 121


state 116

   59 primary: primary TOKEN_DOT TOKEN_SQUAREROOT TOKEN_LEFT_PARENTHESIS . TOKEN_RIGHT_PARENTHESIS

    TOKEN_RIGHT_PARENTHESIS  shift, and go to state 122


state 117

   17 while_stmt: TOKEN_KEYWORD_WHILE expression TOKEN_LEFT_BRACE block TOKEN_RIGHT_BRACE .

    $default  reduce using rule 17 (while_stmt)


state 118

   16 for_stmt: TOKEN_KEYWORD_FOR assignment_stmt TOKEN_RANGE expression TOKEN_LEFT_BRACE block . TOKEN_RIGHT_BRACE

    TOKEN_RIGHT_BRACE  shift, and go to state 123


state 119

   12 elif_stmt: TOKEN_KEYWORD_ELSE . TOKEN_KEYWORD_IF expression TOKEN_LEFT_BRACE block TOKEN_RIGHT_BRACE elif_stmt
   13          | TOKEN_KEYWORD_ELSE . TOKEN_KEYWORD_IF expression TOKEN_LEFT_BRACE block TOKEN_RIGHT_BRACE else_block
   14          | TOKEN_KEYWORD_ELSE . TOKEN_KEYWORD_IF expression TOKEN_LEFT_BRACE block TOKEN_RIGHT_BRACE
   15 else_block: TOKEN_KEYWORD_ELSE . TOKEN_LEFT_BRACE block TOKEN_RIGHT_BRACE

    TOKEN_KEYWORD_IF  shift, and go to state 124
    TOKEN_LEFT_BRACE  shift, and go to state 125


state 120

    9 if_stmt: TOKEN_KEYWORD_IF expression TOKEN_LEFT_BRACE block TOKEN_RIGHT_BRACE elif_stmt .

    $default  reduce using rule 9 (if_stmt)


state 121

   10 if_stmt: TOKEN_KEYWORD_IF expression TOKEN_LEFT_BRACE block TOKEN_RIGHT_BRACE else_block .

    $default  reduce using rule 10 (if_stmt)


state 122

   59 primary: primary TOKEN_DOT TOKEN_SQUAREROOT TOKEN_LEFT_PARENTHESIS TOKEN_RIGHT_PARENTHESIS .

    $default  reduce using rule 59 (primary)


state 123

   16 for_stmt: TOKEN_KEYWORD_FOR assignment_stmt TOKEN_RANGE expression TOKEN_LEFT_BRACE block TOKEN_RIGHT_BRACE .

    $default  reduce using rule 16 (for_stmt)


state 124

   12 elif_stmt: TOKEN_KEYWORD_ELSE TOKEN_KEYWORD_IF . expression TOKEN_LEFT_BRACE block TOKEN_RIGHT_BRACE elif_stmt
   13          | TOKEN_KEYWORD_ELSE TOKEN_KEYWORD_IF . expression TOKEN_LEFT_BRACE block TOKEN_RIGHT_BRACE else_block
   14          | TOKEN_KEYWORD_ELSE TOKEN_KEYWORD_IF . expression TOKEN_LEFT_BRACE block TOKEN_RIGHT_BRACE

    TOKEN_IDENTIFIER        shift, and go to state 8
    TOKEN_INTEGER           shift, and go to state 25
    TOKEN_LEFT_PARENTHESIS  shift, and go to state 26
    TOKEN_LEFT_BRACKET      shift, and go to state 27
    TOKEN_STRING            shift, and go to state 28
    TOKEN_MINUS             shift, and go to state 29
    TOKEN_NOT               shift, and go to state 30
    TOKEN_DOUBLE            shift, and go to state 31

    name           go to state 32
    array_element  go to state 33
    expression     go to state 126
    conjunction    go to state 35
    disjunction    go to state 36
    inversion      go to state 37
    comparison     go to state 38
    sum            go to state 39
    term           go to state 40
    factor         go to state 41
    power          go to state 42
    primary        go to state 43
    atom           go to state 44


state 125

   15 else_block: TOKEN_KEYWORD_ELSE TOKEN_LEFT_BRACE . block TOKEN_RIGHT_BRACE

    TOKEN_NEWLINE  shift, and go to state 90

    block  go to state 127


state 126

   12 elif_stmt: TOKEN_KEYWORD_ELSE TOKEN_KEYWORD_IF expression . TOKEN_LEFT_BRACE block TOKEN_RIGHT_BRACE elif_stmt
   13          | TOKEN_KEYWORD_ELSE TOKEN_KEYWORD_IF expression . TOKEN_LEFT_BRACE block TOKEN_RIGHT_BRACE else_block
   14          | TOKEN_KEYWORD_ELSE TOKEN_KEYWORD_IF expression . TOKEN_LEFT_BRACE block TOKEN_RIGHT_BRACE

    TOKEN_LEFT_BRACE  shift, and go to state 128


state 127

   15 else_block: TOKEN_KEYWORD_ELSE TOKEN_LEFT_BRACE block . TOKEN_RIGHT_BRACE

    TOKEN_RIGHT_BRACE  shift, and go to state 129


state 128

   12 elif_stmt: TOKEN_KEYWORD_ELSE TOKEN_KEYWORD_IF expression TOKEN_LEFT_BRACE . block TOKEN_RIGHT_BRACE elif_stmt
   13          | TOKEN_KEYWORD_ELSE TOKEN_KEYWORD_IF expression TOKEN_LEFT_BRACE . block TOKEN_RIGHT_BRACE else_block
   14          | TOKEN_KEYWORD_ELSE TOKEN_KEYWORD_IF expression TOKEN_LEFT_BRACE . block TOKEN_RIGHT_BRACE

    TOKEN_NEWLINE  shift, and go to state 90

    block  go to state 130


state 129

   15 else_block: TOKEN_KEYWORD_ELSE TOKEN_LEFT_BRACE block TOKEN_RIGHT_BRACE .

    $default  reduce using rule 15 (else_block)


state 130

   12 elif_stmt: TOKEN_KEYWORD_ELSE TOKEN_KEYWORD_IF expression TOKEN_LEFT_BRACE block . TOKEN_RIGHT_BRACE elif_stmt
   13          | TOKEN_KEYWORD_ELSE TOKEN_KEYWORD_IF expression TOKEN_LEFT_BRACE block . TOKEN_RIGHT_BRACE else_block
   14          | TOKEN_KEYWORD_ELSE TOKEN_KEYWORD_IF expression TOKEN_LEFT_BRACE block . TOKEN_RIGHT_BRACE

    TOKEN_RIGHT_BRACE  shift, and go to state 131


state 131

   12 elif_stmt: TOKEN_KEYWORD_ELSE TOKEN_KEYWORD_IF expression TOKEN_LEFT_BRACE block TOKEN_RIGHT_BRACE . elif_stmt
   13          | TOKEN_KEYWORD_ELSE TOKEN_KEYWORD_IF expression TOKEN_LEFT_BRACE block TOKEN_RIGHT_BRACE . else_block
   14          | TOKEN_KEYWORD_ELSE TOKEN_KEYWORD_IF expression TOKEN_LEFT_BRACE block TOKEN_RIGHT_BRACE .

    TOKEN_KEYWORD_ELSE  shift, and go to state 119

    $default  reduce using rule 14 (elif_stmt)

    elif_stmt   go to state 132
    else_block  go to state 133


state 132

   12 elif_stmt: TOKEN_KEYWORD_ELSE TOKEN_KEYWORD_IF expression TOKEN_LEFT_BRACE block TOKEN_RIGHT_BRACE elif_stmt .

    $default  reduce using rule 12 (elif_stmt)


state 133

   13 elif_stmt: TOKEN_KEYWORD_ELSE TOKEN_KEYWORD_IF expression TOKEN_LEFT_BRACE block TOKEN_RIGHT_BRACE else_block .

    $default  reduce using rule 13 (elif_stmt)
